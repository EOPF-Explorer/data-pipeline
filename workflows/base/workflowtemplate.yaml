apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: geozarr-pipeline
  namespace: "" # Set by kustomize overlay
spec:
  serviceAccountName: operate-workflow-sa
  entrypoint: main
  archiveLogs: false
  ttlStrategy:
    secondsAfterCompletion: 86400
  podGC:
    strategy: OnPodSuccess
    deleteDelayDuration: 3600s
  workflowMetadata:
    labels:
      workflows.argoproj.io/workflow-template: geozarr-pipeline
  arguments:
    parameters:
    - name: source_url
    - name: register_collection
      value: sentinel-2-l2a-dp-test
    - name: stac_api_url
      value: https://api.explorer.eopf.copernicus.eu/stac
    - name: raster_api_url
      value: https://api.explorer.eopf.copernicus.eu/raster
    - name: s3_endpoint
      value: https://s3.de.io.cloud.ovh.net
    - name: s3_output_bucket
      value: esa-zarr-sentinel-explorer-fra
    - name: s3_output_prefix
      value: tests-output
    - name: pipeline_image
      value: ghcr.io/eopf-explorer/data-pipeline:sha-238c7d9
    # Optional conversion parameter overrides (empty = use collection defaults)
    - name: override_groups
      value: ""
    - name: override_spatial_chunk
      value: ""
    - name: override_tile_width
      value: ""
    - name: override_enable_sharding
      value: ""
  templates:
  - name: main
    dag:
      tasks:
      - name: convert
        template: convert-geozarr
      - name: register
        template: register-stac
        dependencies:
        - convert

  - name: convert-geozarr
    activeDeadlineSeconds: 3600
    script:
      image: "{{workflow.parameters.pipeline_image}}"
      imagePullPolicy: Always
      command: [python, /app/scripts/convert.py]
      args:
      - --source-url
      - "{{workflow.parameters.source_url}}"
      - --collection
      - "{{workflow.parameters.register_collection}}"
      - --s3-output-bucket
      - "{{workflow.parameters.s3_output_bucket}}"
      - --s3-output-prefix
      - "{{workflow.parameters.s3_output_prefix}}"
      resources:
        requests:
          memory: 4Gi
          cpu: '1'
        limits:
          memory: 8Gi
          cpu: '2'
      env:
      - name: PYTHONUNBUFFERED
        value: '1'
      - name: AWS_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            name: geozarr-s3-credentials
            key: AWS_ACCESS_KEY_ID
      - name: AWS_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            name: geozarr-s3-credentials
            key: AWS_SECRET_ACCESS_KEY
      - name: AWS_ENDPOINT_URL
        value: '{{workflow.parameters.s3_endpoint}}'
      - name: ZARR_V3_EXPERIMENTAL_API
        value: '1'

  - name: register-stac
    activeDeadlineSeconds: 600
    script:
      image: "{{workflow.parameters.pipeline_image}}"
      imagePullPolicy: Always
      command: [python, /app/scripts/register.py]
      args:
      - --source-url
      - "{{workflow.parameters.source_url}}"
      - --collection
      - "{{workflow.parameters.register_collection}}"
      - --stac-api-url
      - "{{workflow.parameters.stac_api_url}}"
      - --raster-api-url
      - "{{workflow.parameters.raster_api_url}}"
      - --s3-endpoint
      - "{{workflow.parameters.s3_endpoint}}"
      - --s3-output-bucket
      - "{{workflow.parameters.s3_output_bucket}}"
      - --s3-output-prefix
      - "{{workflow.parameters.s3_output_prefix}}"
      ports:
      - containerPort: 8000
        name: metrics
      resources:
        requests:
          memory: 1Gi
          cpu: 500m
        limits:
          memory: 2Gi
          cpu: '1'
      env:
      - name: PYTHONUNBUFFERED
        value: '1'
