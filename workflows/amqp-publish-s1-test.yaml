---
apiVersion: v1
kind: ConfigMap
metadata:
  name: amqp-payload-s1-test
  namespace: devseed-staging
data:
  body.json: |
    {
      "source_url": "https://stac.core.eopf.eodc.eu/collections/sentinel-1-l1-grd/items/S1C_IW_GRDH_1SDV_20251008T163126_20251008T163151_004473_008DBA_9AB4",
      "item_id": "S1C_IW_GRDH_20251008_test",
      "collection": "sentinel-1-l1-grd"
    }
---
apiVersion: batch/v1
kind: Job
metadata:
  name: amqp-publish-s1-test
  namespace: devseed-staging
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: publish
          image: python:3.11-slim
          command:
            - /bin/bash
            - -c
            - |
              set -e
              pip install -q pika
              cat <<'PUBLISH_SCRIPT' > /tmp/publish.py
              import json
              import os
              import pika

              with open('/payload/body.json') as f:
                  payload = json.load(f)

              credentials = pika.PlainCredentials(
                  os.environ['RABBITMQ_USERNAME'],
                  os.environ['RABBITMQ_PASSWORD']
              )
              parameters = pika.ConnectionParameters(
                  host='rabbitmq.core.svc.cluster.local',
                  port=5672,
                  credentials=credentials
              )

              connection = pika.BlockingConnection(parameters)
              channel = connection.channel()

              routing_key = f"eopf.items.{payload['collection']}"

              channel.basic_publish(
                  exchange='geozarr',
                  routing_key=routing_key,
                  body=json.dumps(payload),
                  properties=pika.BasicProperties(
                      content_type='application/json',
                      delivery_mode=2  # persistent
                  )
              )

              print(f"âœ… Published to exchange=geozarr, routing_key={routing_key}")
              print(f"ðŸ“¦ Payload: {json.dumps(payload, indent=2)}")

              connection.close()
              PUBLISH_SCRIPT

              python /tmp/publish.py
          env:
            - name: RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: username
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: password
          volumeMounts:
            - name: payload
              mountPath: /payload
              readOnly: true
      volumes:
        - name: payload
          configMap:
            name: amqp-payload-s1-test
